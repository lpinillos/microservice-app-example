version: "3.3"

services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - backend

  cache:
    image: redis:7
    ports:
      - "6380:6379"
    volumes:
      - cache-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - backend

  zipkin:
    image: openzipkin/zipkin
    networks:
      - backend
    ports:
      - "9411:9411"
    restart: unless-stopped



  auth-api:
    build: ./auth-api
    environment:
      - JWT_SECRET=PRFT
      - AUTH_API_PORT=8000
      - USERS_API_ADDRESS=http://users-api:8083
      - CIRCUIT_BREAKER_ENABLED=true
      - CIRCUIT_BREAKER_TIMEOUT=3000
      - CIRCUIT_BREAKER_RESET_TIMEOUT=30000
      - CIRCUIT_BREAKER_ERROR_THRESHOLD=50
    ports:
      - "8000:8000"
    depends_on:
      - users-api
      - cache
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-X", "POST", "-H", "Content-Type: application/json", "-d", '{"username":"admin","password":"admin"}', "http://localhost:8000/login"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  users-api:
    build: ./users-api
    environment:
      - JWT_SECRET=PRFT
      - SERVER_PORT=8083
      - CACHE_HOST=cache
      - CACHE_PORT=6379
      - CACHE_TTL=300
      - CACHE_ENABLED=true
    ports:
      - "8083:8083"
    depends_on:
      - cache
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/users"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  todos-api:
    build: ./todos-api
    environment:
      - JWT_SECRET=PRFT
      - TODO_API_PORT=8082
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
      - CACHE_HOST=cache
      - CACHE_PORT=6379
      - CACHE_TTL=300
      - CACHE_ENABLED=true
      - CIRCUIT_BREAKER_ENABLED=true
      - CIRCUIT_BREAKER_TIMEOUT=3000
      - CIRCUIT_BREAKER_RESET_TIMEOUT=30000
      - CIRCUIT_BREAKER_ERROR_THRESHOLD=50
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    ports:
      - "8082:8082"
    depends_on:
      - redis
      - cache
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/todos"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  log-processor:
    build: ./log-message-processor
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis
    restart: on-failure
    networks:
      - backend

  frontend:
    build: ./frontend
    environment:
      - PORT=8081
      - AUTH_API_ADDRESS=http://auth-api:8000
      - TODOS_API_ADDRESS=http://todos-api:8082
      - RETRY_ATTEMPTS=3
      - RETRY_DELAY=1000
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    ports:
      - "8081:8081"
    extra_hosts:
      - "127.0.0.1:host-gateway"
    depends_on:
      - auth-api
      - todos-api
      - zipkin
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - backend

  nginx-retry:
    image: nginx:latest
    volumes: 
      - ./nginx-retry-gateway/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - auth-api
      - todos-api
      - users-api
      - frontend

volumes:
  grafana-storage:
  redis-data:
  cache-data:


networks:
  backend:
