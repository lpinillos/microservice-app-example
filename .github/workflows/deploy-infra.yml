name: Deploy Infrastructure

on:
  push:
    paths:
      - 'infra/**'

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: infra

      - name: Terraform Apply
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: terraform apply -auto-approve
        working-directory: infra

      - name: Get Terraform Output
        id: tf_output
        run: |
          ip=$(terraform output -raw public_ip_address | head -n1)
          echo "ip=$ip" >> $GITHUB_OUTPUT
        working-directory: infra

      - name: Generate Ansible Inventory
        run: |
          echo "[all]" > ansible/inventory.ini
          echo "vm ansible_host=${{ steps.tf_output.outputs.ip }} ansible_user=azureuser ansible_ssh_pass=bruno1234. ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> ansible/inventory.ini
          cat ansible/inventory.ini
      - name: Save Ansible Inventory as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: inventory
          path: ansible/inventory.ini

      - name: Run Ansible Playbook (initial provisioning)
        run: ansible-playbook ansible/deploy.yml -i ansible/inventory.ini
