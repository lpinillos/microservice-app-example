name: Deploy Infrastructure and Configure App
on:
  push:
    paths:
      - 'infra/**'
      - 'ansible/**'
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        run: terraform init
        working-directory: infra
      
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: infra
        
      - name: Get VM IP
        id: vm-ip
        run: |
          cd infra
          terraform output > tf_output.txt
          cat tf_output.txt
          grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' tf_output.txt > ip.txt
          VM_IP=$(cat ip.txt)
          echo "vm_ip=$VM_IP" >> $GITHUB_OUTPUT
        
      - name: Wait for VM to be available
        run: sleep 90
      
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible sshpass
      
      - name: Prepare Ansible inventory
        run: |
          sed "s/__IP_PLACEHOLDER__/${{ steps.vm-ip.outputs.vm_ip }}/g" ansible/inventory.ini > ansible/inventory_deployed.ini
      
      - name: Run Ansible playbook
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i ansible/inventory_deployed.ini ansible/setup.yml
